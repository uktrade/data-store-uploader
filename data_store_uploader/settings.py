"""
Django settings for data_store_uploader project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

import environ

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

env = environ.Env()

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u!mqqi7o@ddkp-!n%fiun^f)eal(nofwy6mk1jsq1f9f8#hcek'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'sass_processor',
    'webpack_loader',
 ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# AUTO_LOGIN = env.bool('AUTO_LOGIN', False)
# if AUTO_LOGIN:
#     MIDDLEWARE += ['data_store_uploader.middleware.AutoLoginMiddleware']
# else:
#     MIDDLEWARE += ['authbroker_client.middleware.ProtectAllViewsMiddleware']
    
ROOT_URLCONF = 'data_store_uploader.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'data_store_uploader.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'sass_processor.finders.CssFinder',
]

ASSETS_FOLDER = os.path.join(BASE_DIR, '_static')
STATIC_FOLDER = os.path.join(BASE_DIR, 'static')
STATIC_ROOT = ASSETS_FOLDER
STATICFILES_DIRS = [
    ('data_store_uploader', STATIC_FOLDER),
]

###

# STATICFILES_FINDERS = [
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     'sass_processor.finders.CssFinder',
# ]

# ASSETS_FOLDER = os.path.join(BASE_DIR, '_static')

# STATIC_ROOT = ASSETS_FOLDER

# STATIC_FOLDER = os.path.join(BASE_DIR, 'static')

# STATICFILES_DIRS = [
#     ('data_store_uploader', STATIC_FOLDER),
# ]

# WEBPACK_LOADER = {
#     'DEFAULT': {
#         'BUNDLE_DIR_NAME': 'data_explorer/js/bundles/',
#         'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'),
#     }
# }

# SASS_PROCESSOR_INCLUDE_DIRS = [
#     STATIC_FOLDER,
# ]

# # if DEBUG:
# #     STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'
# # else:
# #     STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# SASS_PROCESSOR_INCLUDE_FILE_PATTERN = r'^.+\.scss$'

# SASS_OUTPUT_STYLE = 'compressed'

# SASS_PROCESSOR_ENABLED = DEBUG
# SASS_PROCESSOR_AUTO_INCLUDE = DEBUG

# ENABLE_DEBUG_TOOLBAR = env.bool('ENABLE_DEBUG_TOOLBAR', default=DEBUG)
